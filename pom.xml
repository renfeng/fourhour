<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>cn.renfeng</groupId>
	<artifactId>fourhour</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<packaging>war</packaging>

	<name>fourhour</name>

	<description></description>

	<url>http://beike.appspot.com/</url>

	<developers>
		<developer>
			<id>fren</id>
			<name>Frank Ren</name>
			<email>renfeng.cn@gmail.com</email>
			<timezone>GMT+8</timezone>
		</developer>
	</developers>

	<build>
		<defaultGoal>package</defaultGoal>
		<plugins>

			<!-- phase: validate -->
			<plugin>
				<artifactId>maven-help-plugin</artifactId>
				<version>2.1.1</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>active-profiles</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- phase: compile -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<encoding>UTF-8</encoding>
					<!-- <compilerArgument>-AqueryMode=PROPERTY</compilerArgument> -->
				</configuration>
			</plugin>

			<!-- phase: process-classes -->

			<!-- phase: test -->

			<!-- phase: prepare-package -->

			<!-- phase: package -->
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<archiveClasses>true</archiveClasses>
					<!-- <webResources> <resource> <directory>src/main/webapp</directory> 
						<filtering>true</filtering> <includes> <include>**/appengine-web.xml</include> 
						</includes> </resource> </webResources> -->
					<packagingExcludes>WEB-INF/web.xml</packagingExcludes>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.2.1</version>
				<executions>
					<execution>
						<goals>
							<!-- phase: package -->
							<!-- <goal>jar-no-fork</goal> -->
							<!-- phase: package -->
							<!-- <goal>test-jar-no-fork</goal> -->
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.2</version>
				<executions>
					<execution>
						<goals>
							<!-- <goal>jar</goal> -->
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- phase: pre-integration-test -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>${gwt.version}</version>
				<configuration>

					<module>${gwt.module}</module>
					<!-- <webappDirectory>src/main/webapp</webappDirectory> -->

					<!-- for compile and run goals -->
					<extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
					<!-- <style>PRETTY</style> -->

					<runTarget>${context}</runTarget>
					<noServer>true</noServer>
					<port>80</port>

				</configuration>
				<executions>
					<execution>
						<id>compile</id>
						<goals>
							<!-- default phase: process-resources -->
							<!-- <goal>resources</goal> -->
							<!-- default phase: prepare-package -->
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<id>run</id>
						<!-- TODO should not join integration test -->
						<phase>pre-integration-test</phase>
						<goals>
							<!-- XXX cannot prevent forking, http://mojo.codehaus.org/gwt-maven-plugin/run-mojo.html -->
							<!-- TODO make profiles for dev and production -->
							<!-- <goal>run</goal> -->
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- phase: invoked manually -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat6-maven-plugin</artifactId>
				<version>2.0</version>
				<executions>
					<execution>
						<goals>
							<goal>run-war-only</goal>
						</goals>
					</execution>
				</executions>
				<configuration>

					<ajpPort>9005</ajpPort>
					<!-- <httpsPort>8443</httpsPort> -->

					<!-- https://issues.apache.org/jira/browse/MTOMCAT-175 -->
					<warDirectory>${project.build.directory}/${project.build.finalName}</warDirectory>

				</configuration>
			</plugin>
			<plugin>
				<groupId>com.google.appengine</groupId>
				<artifactId>appengine-maven-plugin</artifactId>
				<version>1.7.5</version>
				<configuration>
					<port>8180</port>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.google.appengine</groupId>
						<artifactId>appengine-tools-sdk</artifactId>
						<version>${appengine.target.version}</version>
					</dependency>
				</dependencies>
			</plugin>

		</plugins>
	</build>

	<profiles>
		<profile>
			<id>3.1</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<!-- phase: process-classes -->
					<plugin>
						<groupId>org.datanucleus</groupId>
						<artifactId>maven-datanucleus-plugin</artifactId>
						<version>3.1.3</version>
						<configuration>

							<!-- required by schema-create -->
							<!-- <props>${basedir}/src/main/resources/datanucleus-mysql.properties</props> -->

							<!-- suppresses error: The command line is too long. -->
							<!-- <metadataIncludes>**/*.jdo,**/*.orm,**/*.class</metadataIncludes> -->
							<fork>false</fork>

							<persistenceUnitName>transactions-optional</persistenceUnitName>

							<!-- logging -->
							<log4jConfiguration>${basedir}/src/main/resources/log4j.properties</log4jConfiguration>

						</configuration>
						<executions>
							<execution>
								<!-- hack to prevent eclipse from crashing on clean build -->
								<!-- <phase>process-classes</phase> -->
								<phase>test-compile</phase>
								<goals>
									<goal>enhance</goal>
									<!-- <goal>schema-create</goal> -->
									<!-- <goal>schema-delete</goal> -->

									<!-- <goal>schema-validate</goal> -->
									<!-- <goal>schema-info</goal> -->
									<!-- <goal>schema-dbinfo</goal> -->
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.datanucleus</groupId>
								<artifactId>datanucleus-api-jdo</artifactId>
								<version>${datanucleus-api-jdo.version}</version>
							</dependency>

							<!-- required by schema-create -->

							<dependency>
								<groupId>log4j</groupId>
								<artifactId>log4j</artifactId>
								<version>${log4j.version}</version>
							</dependency>

							<!-- to prevent version check -->
							<dependency>
								<groupId>org.datanucleus</groupId>
								<artifactId>datanucleus-core</artifactId>
								<version>${datanucleus.version}</version>
							</dependency>
							<dependency>
								<groupId>org.datanucleus</groupId>
								<artifactId>datanucleus-enhancer</artifactId>
								<version>${datanucleus-enhancer.version}</version>
							</dependency>
							<!-- for datanucleus.version 3.1.1 -->
							<dependency>
								<groupId>org.ow2.asm</groupId>
								<artifactId>asm</artifactId>
								<version>4.1</version>
							</dependency>
							<dependency>
								<groupId>javax.jdo</groupId>
								<artifactId>jdo-api</artifactId>
								<version>${jdo-api.version}</version>
							</dependency>

						</dependencies>
					</plugin>
				</plugins>
			</build>
			<properties>
				<datanucleus.version>3.1.3</datanucleus.version>
				<datanucleus-api-jdo.version>3.1.3</datanucleus-api-jdo.version>
				<datanucleus-enhancer.version>3.1.1</datanucleus-enhancer.version>
				<datanucleus-jdo-query.version>3.0.2</datanucleus-jdo-query.version>
			</properties>
		</profile>
	</profiles>

	<dependencies>

		<!-- <dependency> <groupId>com.google.appengine</groupId> <artifactId>appengine-api-1.0-sdk</artifactId> 
			<version>${appengine.target.version}</version> <scope>runtime</scope> </dependency> -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<!-- <dependency> <groupId>javax.servlet</groupId> <artifactId>jstl</artifactId> 
			<version>1.2</version> </dependency> -->
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<version>${gwt.version}</version>
			<scope>runtime</scope>
		</dependency>

		<!-- This is also used by gwt-maven-plugin to deduce GWT version number. -->
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>${gwt.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- <dependency> <groupId>commons-io</groupId> <artifactId>commons-io</artifactId> 
			<version>2.4</version> </dependency> -->

		<!-- jdo support -->
		<!-- <dependency> <groupId>javax.jdo</groupId> <artifactId>jdo-api</artifactId> 
			<version>${jdo-api.version}</version> </dependency> -->
		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-api-jdo</artifactId>
			<version>${datanucleus-api-jdo.version}</version>
			<!-- <scope>runtime</scope> -->
		</dependency>
		<!-- <dependency> <groupId>org.datanucleus</groupId> <artifactId>datanucleus-jdo-query</artifactId> 
			<version>${datanucleus-jdo-query.version}</version> <scope>runtime</scope> 
			</dependency> -->
		<!-- <dependency> <groupId>org.datanucleus</groupId> <artifactId>datanucleus-core</artifactId> 
			<version>${datanucleus.version}</version> <scope>runtime</scope> </dependency> -->
		<dependency>
			<groupId>com.google.appengine.orm</groupId>
			<artifactId>datanucleus-appengine</artifactId>
			<version>2.1.2</version>
		</dependency>

		<!-- logging -->
		<!-- <dependency> <groupId>log4j</groupId> <artifactId>log4j</artifactId> 
			<version>${log4j.version}</version> <scope>runtime</scope> </dependency> -->

		<!-- testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.0</version>
			<scope>test</scope>
		</dependency>
		<!-- <dependency> <groupId>com.google.appengine</groupId> <artifactId>appengine-testing</artifactId> 
			<version>${appengine.target.version}</version> <scope>test</scope> </dependency> -->
		<!-- <dependency> <groupId>com.google.appengine</groupId> <artifactId>appengine-api-stubs</artifactId> 
			<version>${appengine.target.version}</version> <scope>test</scope> </dependency> -->

	</dependencies>

	<properties>
		<appengine.app.version>1</appengine.app.version>
		<appengine.target.version>1.7.5</appengine.target.version>
		<context>/</context>
		<gwt.module>cn.renfeng.fourhour.FourHour</gwt.module>
		<gwt.version>2.5.0</gwt.version>
		<jdo-api.version>3.0.1</jdo-api.version>
		<log4j.version>1.2.17</log4j.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>

</project>
